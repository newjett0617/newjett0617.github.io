<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>sed on Jett&#39;s Blog</title>
    <link>https://newjett0617.github.io/tags/sed/</link>
    <description>Recent content in sed on Jett&#39;s Blog</description>
    <image>
      <url>https://newjett0617.github.io</url>
      <link>https://newjett0617.github.io</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 10 Sep 2020 15:15:08 +0800</lastBuildDate><atom:link href="https://newjett0617.github.io/tags/sed/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux 中的 sed 指令</title>
      <link>https://newjett0617.github.io/posts/20200910-linux-%E4%B8%AD%E7%9A%84-sed-%E6%8C%87%E4%BB%A4/</link>
      <pubDate>Thu, 10 Sep 2020 15:15:08 +0800</pubDate>
      
      <guid>https://newjett0617.github.io/posts/20200910-linux-%E4%B8%AD%E7%9A%84-sed-%E6%8C%87%E4%BB%A4/</guid>
      <description>在 Linux 的 sed 版本是 GNU，在 macOS 的 sed 版本是 BSD，兩者在使用上略有不同，踩到這個雷，紀錄一下
-i 參數的差異 最常見的就是 -i，如果沒有提供後綴，則原始文件將被覆蓋而不進行備份（in place）
下面的指令在 macOS 中是可以執行的
cat &amp;lt;&amp;lt; EOF &amp;gt; test.txt foo bar baz EOF sed -e &amp;#39;s/foo/bar/g&amp;#39; -i &amp;#39;&amp;#39; test.txt 但是在 Linux 中卻會噴錯 sed: can&#39;t read : No such file or directory
在 Linux 中只需要使用 -i 即可
sed -e &amp;#39;s/foo/bar/g&amp;#39; -i test.txt 更改 separator 另外一個技巧就是更換 separator s/regular expression/replacement/flags
如果使用 / 當作 separator，在正規表示式中有用到 / 的地方，需要使用 \ 跳脫，這會造成很難閱讀</description>
    </item>
    
  </channel>
</rss>
